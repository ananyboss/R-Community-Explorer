{
  "summary": [
    {
      "total_tweets_today": 4480,
      "average_tweets_per_hour": 187,
      "tweeters_today": 1416,
      "total_likes_today": 4478
    }
  ],
  "top20_hashtags": [
    {
      "Var1": "tidyverse rstats",
      "Freq": 149
    },
    {
      "Var1": "rstats DataScience",
      "Freq": 118
    },
    {
      "Var1": "BigData Analytics DataScience AI MachineLearning IoT IIoT PyTorch Python RStats",
      "Freq": 97
    },
    {
      "Var1": "BigData Analytics DataScience AI MachineLearning",
      "Freq": 71
    },
    {
      "Var1": "BigData Analytics DataScience DeepLearning",
      "Freq": 60
    },
    {
      "Var1": "BigData Analytics DataScience",
      "Freq": 53
    },
    {
      "Var1": "Books BigData Analytics DataScience IoT IIoT Python RStats TensorFlow",
      "Freq": 53
    },
    {
      "Var1": "RStats",
      "Freq": 44
    },
    {
      "Var1": "BigData Analytics DataScience AI MachineLearning IoT IIoT Python",
      "Freq": 42
    },
    {
      "Var1": "BigData Analytics DataScience AI MachineLearning IoT",
      "Freq": 41
    },
    {
      "Var1": "DataCamp DataCampFreeWeek",
      "Freq": 41
    },
    {
      "Var1": "BigData Analytics DataScience AI MachineLearning IoT IIoT Python RStats TensorFlow Java",
      "Freq": 40
    },
    {
      "Var1": "theinsaneapp ML AI MachineLearning DataScience rstats 100DaysOfMLCode javascript reactjs",
      "Freq": 35
    },
    {
      "Var1": "tidyverse",
      "Freq": 35
    },
    {
      "Var1": "Blockchain Books BigData Analytics DataScience AI MachineLearning FinTech IoT IIoT Python",
      "Freq": 33
    },
    {
      "Var1": "Rstats",
      "Freq": 33
    },
    {
      "Var1": "BigData Analytics DataScience IoT IIoT Python RStats TensorFlow",
      "Freq": 32
    },
    {
      "Var1": "AI 100DaysOfCode MachineLearning DeepLearning IoT",
      "Freq": 31
    },
    {
      "Var1": "CyberSecurity Books BigData Analytics DataScience IoT IIoT PyTorch Python",
      "Freq": 31
    },
    {
      "Var1": "MachineLearning BigData Analytics DataScience AI IoT IIoT PyTorch Python",
      "Freq": 31
    }
  ],
  "top20_tweeters": [
    {
      "Var1": "LlnuxBot",
      "Freq": 195
    },
    {
      "Var1": "nlognbot",
      "Freq": 175
    },
    {
      "Var1": "xaelbot",
      "Freq": 168
    },
    {
      "Var1": "chidambara09",
      "Freq": 147
    },
    {
      "Var1": "Taieb_Bot",
      "Freq": 141
    },
    {
      "Var1": "CodeGnuts",
      "Freq": 132
    },
    {
      "Var1": "nodeQuotesBot",
      "Freq": 127
    },
    {
      "Var1": "tidyversetweets",
      "Freq": 96
    },
    {
      "Var1": "anglehernandez",
      "Freq": 94
    },
    {
      "Var1": "ServerlessFan",
      "Freq": 77
    },
    {
      "Var1": "TheDeveloperBot",
      "Freq": 76
    },
    {
      "Var1": "hubofml",
      "Freq": 63
    },
    {
      "Var1": "rstats4ds",
      "Freq": 51
    },
    {
      "Var1": "LinuxDreams",
      "Freq": 48
    },
    {
      "Var1": "NetworkIndie",
      "Freq": 46
    },
    {
      "Var1": "TheCuriousLuke",
      "Freq": 42
    },
    {
      "Var1": "DeepSingularity",
      "Freq": 38
    },
    {
      "Var1": "RaymondWSA460",
      "Freq": 38
    },
    {
      "Var1": "_reactdev",
      "Freq": 33
    },
    {
      "Var1": "CRANberriesFeed",
      "Freq": 31
    }
  ],
  "top10_tweets_like": ["My favorite part about the new Palmer penguins dataset for #rstats is the built-in Simpson's Paradox https://t.co/3o2oynB56Q https://t.co/MOCpWXPiWG", "Free #rstats package idea: {figr}. Insert placeholder figures in an R Markdown document, but the images are randomly chosen from the USDA's library of pomological watercolor paintings of figs here: https://t.co/T7o1c2QywW https://t.co/SWGTVbIcih", "Feeling very excited + grateful to be doing a #postdoc w/ @adaptive_plant working alongside @JenRichmondPhD and many more @UNSWScience collaborators. We will be developing #Rstats packages together so everyone can do better #science! üë©‚Äçüíªüåèüìä Bring on 2021! ‚úåÔ∏è#WomenInSTEM", "I wrote a little post about possibly() and safely() from #purrr for handling errors.  For whatever reason I've never found tryCatch() very easy to use, and these functions make the task a lot easier for me. üëç #rstats\nhttps://t.co/TBrXamnWW5", "Exploratory Data Analysis Guide  {https://t.co/SMip1FoEww} #rstats #DataScience", "Time Series in 5-Minutes, Part 5: Anomaly Detection  {https://t.co/mSqQSWndqA} #rstats #DataScience", "100 Time Series Data Mining Questions (with answers!) ‚Äì Part 1  {https://t.co/LK9bsyvZ9M} #rstats #DataScience", "Best Machine Learning #Books (Updated for 2020). #BigData #Analytics #DataScience #IoT #IIoT  #Python #RStats #TensorFlow #Java #JavaScript #ReactJS #GoLang #CloudComputing #Serverless #DataScientist #Linux #Mathematics #Programming #Coding #100DaysofCode \nhttps://t.co/0cCvoCGKZn https://t.co/iV9Y9Hy0I7", "Version 2.0 of our #MODIStsp package for MODIS data processing is now on CRAN. The new version introduces a new and improved GUI based on #shiny and enhances support for CLI usage. https://t.co/9eLo0JOak5\n#RStats #rspatial https://t.co/eQQ8wui3TE", "National composition of Montenegro, according to the 2011 population census\n\n#nationality #census #CrnaGora #BigData #dataviz #datascience #maps #gis #rstats https://t.co/bRA04CJn8T"],
  "top10_tweets_retweet": ["My favorite part about the new Palmer penguins dataset for #rstats is the built-in Simpson's Paradox https://t.co/3o2oynB56Q https://t.co/MOCpWXPiWG", "Free #rstats package idea: {figr}. Insert placeholder figures in an R Markdown document, but the images are randomly chosen from the USDA's library of pomological watercolor paintings of figs here: https://t.co/T7o1c2QywW https://t.co/SWGTVbIcih", "Feeling very excited + grateful to be doing a #postdoc w/ @adaptive_plant working alongside @JenRichmondPhD and many more @UNSWScience collaborators. We will be developing #Rstats packages together so everyone can do better #science! üë©‚Äçüíªüåèüìä Bring on 2021! ‚úåÔ∏è#WomenInSTEM", "I wrote a little post about possibly() and safely() from #purrr for handling errors.  For whatever reason I've never found tryCatch() very easy to use, and these functions make the task a lot easier for me. üëç #rstats\nhttps://t.co/TBrXamnWW5", "Exploratory Data Analysis Guide  {https://t.co/SMip1FoEww} #rstats #DataScience", "Time Series in 5-Minutes, Part 5: Anomaly Detection  {https://t.co/mSqQSWndqA} #rstats #DataScience", "100 Time Series Data Mining Questions (with answers!) ‚Äì Part 1  {https://t.co/LK9bsyvZ9M} #rstats #DataScience", "Best Machine Learning #Books (Updated for 2020). #BigData #Analytics #DataScience #IoT #IIoT  #Python #RStats #TensorFlow #Java #JavaScript #ReactJS #GoLang #CloudComputing #Serverless #DataScientist #Linux #Mathematics #Programming #Coding #100DaysofCode \nhttps://t.co/0cCvoCGKZn https://t.co/iV9Y9Hy0I7", "Version 2.0 of our #MODIStsp package for MODIS data processing is now on CRAN. The new version introduces a new and improved GUI based on #shiny and enhances support for CLI usage. https://t.co/9eLo0JOak5\n#RStats #rspatial https://t.co/eQQ8wui3TE", "National composition of Montenegro, according to the 2011 population census\n\n#nationality #census #CrnaGora #BigData #dataviz #datascience #maps #gis #rstats https://t.co/bRA04CJn8T"]
}
